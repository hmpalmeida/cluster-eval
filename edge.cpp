#include "edge.hpp"
#include <iostream>

/********************************************************************
* Empty Constructor
********************************************************************/
Edge::Edge() {
}

/********************************************************************
* Constructor
********************************************************************/
Edge::Edge(uint n, float w) {
     node = n;
     weight = w;
}

/********************************************************************
* Destructor
********************************************************************/
Edge::~Edge() {
}

/********************************************************************
* Sets the node value
********************************************************************/
void Edge::setNode(uint n) {
     node = n;
}

/********************************************************************
* Sets the weight value
********************************************************************/
void Edge::setWeight(float w){
     weight = w;
}

/********************************************************************
* Returns the node value
********************************************************************/
uint Edge::getNode() const{
     return node;
}

/********************************************************************
* Returns the weight value
********************************************************************/
float Edge::getWeight() const{
     return weight;
}

/********************************************************************
* Overlod of the "<" operator
********************************************************************/
bool Edge::operator<(const Edge& a) const {
    return node < a.node;
}

/********************************************************************
* Returns a string representation of the Edge
********************************************************************/
std::string Edge::toString() const {
     std::string s("(");
     s += to_string(node);
     s += ",";
     s += to_string(weight);
     s += ")";
     return s;
}

/********************************************************************
* Overload of the "==" operator
********************************************************************/
bool Edge::operator==(const Edge& a) const {
     return node == a.node;
}
